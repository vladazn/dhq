syntax = "proto3";
package storage;
option go_package = "github.com/vladazn/dhq/protos/gen/go/proto/storage";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "github.com/vladazn/dhq"
    version: "1.0"
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "nauth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "auth"
      }
    }
  }
  security: {
    security_requirement: {
      key: "nauth"
    }
  }
};

service Storage {
  rpc Create(CreateRequest) returns (SuccessResponse) {
    option (google.api.http) = {
      post: "/create"
      body: "*"
    };
  }

  rpc Update(UpdateRequest) returns (SuccessResponse) {
    option (google.api.http) = {
      get: "/update"
    };
  }

  rpc Delete(DeleteRequest) returns (SuccessResponse) {
    option (google.api.http) = {
      post: "/remove"
      body: "*"
    };
  }

  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/get"
    };
  }

  rpc History(HistoryRequest) returns (HistoryResponse) {
    option (google.api.http) = {
      get: "/history"
    };
  }
}

message HistoryRequest {
  string key = 1;
}

message DeleteRequest {
  string key = 1;
}

message UpdateRequest {
  string key = 1;
  string value = 2;
}

message CreateRequest {
  string key = 1;
  string value = 2;
}

message GetRequest {
  string key = 1;
}


message GetResponse {
  GetResult result = 1;
  Error error = 2;
}


message SuccessResponse {
  SuccessResult result = 1;
  Error error = 2;
}


message HistoryResponse {
  HistoryResult result = 1;
  Error error = 2;
}

message GetResult {
  Answer data = 1;
}


message HistoryResult {
  repeated Action data = 1;
}

message Action {
  string event = 1;
  Answer data = 2;
}

message Answer {
  string key = 1;
  string value = 2;
}

message SuccessResult {
  bool success = 1;
}

message Error {
  string msg = 1;
}
